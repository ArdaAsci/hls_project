

================================================================
== Vitis HLS Report for 'matrixmul_Pipeline_Row1_Col2'
================================================================
* Date:           Thu Sep  2 13:46:02 2021

* Version:        2021.1 (Build 3247384 on Thu Jun 10 19:36:07 MDT 2021)
* Project:        matrixmul_prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: kintexu
* Target device:  xcku035-sfva784-1-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  13.33 ns|  5.865 ns|     3.60 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       11|       11|  0.147 us|  0.147 us|   11|   11|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Row1_Col2  |        9|        9|         2|          1|          1|     9|       yes|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.83>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 5 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 6 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%indvar_flatten23 = alloca i32 1"   --->   Operation 7 'alloca' 'indvar_flatten23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %res1, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %res, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.62ns)   --->   "%store_ln0 = store i4 0, i4 %indvar_flatten23"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 0.62>
ST_1 : Operation 11 [1/1] (0.62ns)   --->   "%store_ln0 = store i2 0, i2 %i"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 0.62>
ST_1 : Operation 12 [1/1] (0.62ns)   --->   "%store_ln0 = store i2 0, i2 %j"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 0.62>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.preheader.preheader"   --->   Operation 13 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten23_load = load i4 %indvar_flatten23" [matrixmul.cpp:69]   --->   Operation 14 'load' 'indvar_flatten23_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 15 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.03ns)   --->   "%icmp_ln69 = icmp_eq  i4 %indvar_flatten23_load, i4 9" [matrixmul.cpp:69]   --->   Operation 16 'icmp' 'icmp_ln69' <Predicate = true> <Delay = 1.03> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (1.06ns)   --->   "%add_ln69_1 = add i4 %indvar_flatten23_load, i4 1" [matrixmul.cpp:69]   --->   Operation 17 'add' 'add_ln69_1' <Predicate = true> <Delay = 1.06> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln69 = br i1 %icmp_ln69, void %.preheader, void %.exitStub" [matrixmul.cpp:69]   --->   Operation 18 'br' 'br_ln69' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%j_load = load i2 %j" [matrixmul.cpp:71]   --->   Operation 19 'load' 'j_load' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%i_load = load i2 %i" [matrixmul.cpp:69]   --->   Operation 20 'load' 'i_load' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.72ns)   --->   "%add_ln69 = add i2 %i_load, i2 1" [matrixmul.cpp:69]   --->   Operation 21 'add' 'add_ln69' <Predicate = (!icmp_ln69)> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.64ns)   --->   "%icmp_ln71 = icmp_eq  i2 %j_load, i2 3" [matrixmul.cpp:71]   --->   Operation 22 'icmp' 'icmp_ln71' <Predicate = (!icmp_ln69)> <Delay = 0.64> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.50ns)   --->   "%select_ln69 = select i1 %icmp_ln71, i2 0, i2 %j_load" [matrixmul.cpp:69]   --->   Operation 23 'select' 'select_ln69' <Predicate = (!icmp_ln69)> <Delay = 0.50> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.50> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.50ns)   --->   "%select_ln69_1 = select i1 %icmp_ln71, i2 %add_ln69, i2 %i_load" [matrixmul.cpp:69]   --->   Operation 24 'select' 'select_ln69_1' <Predicate = (!icmp_ln69)> <Delay = 0.50> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.50> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln72 = zext i2 %select_ln69_1" [matrixmul.cpp:72]   --->   Operation 25 'zext' 'zext_ln72' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_2 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i2.i2, i2 %select_ln69_1, i2 0" [matrixmul.cpp:72]   --->   Operation 26 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln72 = sub i4 %tmp_2, i4 %zext_ln72" [matrixmul.cpp:72]   --->   Operation 27 'sub' 'sub_ln72' <Predicate = (!icmp_ln69)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.37> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln72_1 = zext i2 %select_ln69" [matrixmul.cpp:72]   --->   Operation 28 'zext' 'zext_ln72_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.74ns) (root node of TernaryAdder)   --->   "%add_ln72_1 = add i4 %sub_ln72, i4 %zext_ln72_1" [matrixmul.cpp:72]   --->   Operation 29 'add' 'add_ln72_1' <Predicate = (!icmp_ln69)> <Delay = 0.74> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.37> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln72_2 = zext i4 %add_ln72_1" [matrixmul.cpp:72]   --->   Operation 30 'zext' 'zext_ln72_2' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%res_addr = getelementptr i16 %res, i64 0, i64 %zext_ln72_2" [matrixmul.cpp:72]   --->   Operation 31 'getelementptr' 'res_addr' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%res1_addr = getelementptr i16 %res1, i64 0, i64 %zext_ln72_2" [matrixmul.cpp:72]   --->   Operation 32 'getelementptr' 'res1_addr' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_1 : Operation 33 [2/2] (0.85ns)   --->   "%res_load = load i4 %res_addr" [matrixmul.cpp:72]   --->   Operation 33 'load' 'res_load' <Predicate = (!icmp_ln69)> <Delay = 0.85> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.85> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_1 : Operation 34 [2/2] (0.85ns)   --->   "%res1_load = load i4 %res1_addr" [matrixmul.cpp:72]   --->   Operation 34 'load' 'res1_load' <Predicate = (!icmp_ln69)> <Delay = 0.85> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.85> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_1 : Operation 35 [1/1] (0.72ns)   --->   "%add_ln71 = add i2 %select_ln69, i2 1" [matrixmul.cpp:71]   --->   Operation 35 'add' 'add_ln71' <Predicate = (!icmp_ln69)> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.62ns)   --->   "%store_ln69 = store i4 %add_ln69_1, i4 %indvar_flatten23" [matrixmul.cpp:69]   --->   Operation 36 'store' 'store_ln69' <Predicate = (!icmp_ln69)> <Delay = 0.62>
ST_1 : Operation 37 [1/1] (0.62ns)   --->   "%store_ln69 = store i2 %select_ln69_1, i2 %i" [matrixmul.cpp:69]   --->   Operation 37 'store' 'store_ln69' <Predicate = (!icmp_ln69)> <Delay = 0.62>
ST_1 : Operation 38 [1/1] (0.62ns)   --->   "%store_ln71 = store i2 %add_ln71, i2 %j" [matrixmul.cpp:71]   --->   Operation 38 'store' 'store_ln71' <Predicate = (!icmp_ln69)> <Delay = 0.62>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 49 'ret' 'ret_ln0' <Predicate = (icmp_ln69)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.86>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @Row1_Col2_str"   --->   Operation 39 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 9, i64 9, i64 9"   --->   Operation 40 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 41 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%specloopname_ln71 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [matrixmul.cpp:71]   --->   Operation 42 'specloopname' 'specloopname_ln71' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/2] (0.85ns)   --->   "%res_load = load i4 %res_addr" [matrixmul.cpp:72]   --->   Operation 43 'load' 'res_load' <Predicate = true> <Delay = 0.85> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.85> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_2 : Operation 44 [1/1] (1.32ns) (grouped into DSP with root node add_ln72)   --->   "%mul_ln72 = mul i16 %res_load, i16 %res_load" [matrixmul.cpp:72]   --->   Operation 44 'mul' 'mul_ln72' <Predicate = true> <Delay = 1.32> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 0> <II = 1> <Delay = 4.14> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 45 [1/2] (0.85ns)   --->   "%res1_load = load i4 %res1_addr" [matrixmul.cpp:72]   --->   Operation 45 'load' 'res1_load' <Predicate = true> <Delay = 0.85> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.85> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_2 : Operation 46 [1/1] (2.82ns) (root node of the DSP)   --->   "%add_ln72 = add i16 %res1_load, i16 %mul_ln72" [matrixmul.cpp:72]   --->   Operation 46 'add' 'add_ln72' <Predicate = true> <Delay = 2.82> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 0> <II = 1> <Delay = 4.14> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 47 [1/1] (0.85ns)   --->   "%store_ln72 = store i16 %add_ln72, i4 %res1_addr" [matrixmul.cpp:72]   --->   Operation 47 'store' 'store_ln72' <Predicate = true> <Delay = 0.85> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.85> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 9> <RAM>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.preheader.preheader"   --->   Operation 48 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 13.3ns, clock uncertainty: 3.6ns.

 <State 1>: 2.84ns
The critical path consists of the following:
	'alloca' operation ('i') [4]  (0 ns)
	'load' operation ('i_load', matrixmul.cpp:69) on local variable 'i' [20]  (0 ns)
	'add' operation ('add_ln69', matrixmul.cpp:69) [21]  (0.729 ns)
	'select' operation ('select_ln69_1', matrixmul.cpp:69) [26]  (0.509 ns)
	'sub' operation ('sub_ln72', matrixmul.cpp:72) [29]  (0 ns)
	'add' operation ('add_ln72_1', matrixmul.cpp:72) [32]  (0.742 ns)
	'getelementptr' operation ('res_addr', matrixmul.cpp:72) [34]  (0 ns)
	'load' operation ('res_load', matrixmul.cpp:72) on array 'res' [37]  (0.858 ns)

 <State 2>: 5.86ns
The critical path consists of the following:
	'load' operation ('res_load', matrixmul.cpp:72) on array 'res' [37]  (0.858 ns)
	'mul' operation of DSP[40] ('mul_ln72', matrixmul.cpp:72) [38]  (1.32 ns)
	'add' operation of DSP[40] ('add_ln72', matrixmul.cpp:72) [40]  (2.83 ns)
	'store' operation ('store_ln72', matrixmul.cpp:72) of variable 'add_ln72', matrixmul.cpp:72 on array 'res1' [41]  (0.858 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
